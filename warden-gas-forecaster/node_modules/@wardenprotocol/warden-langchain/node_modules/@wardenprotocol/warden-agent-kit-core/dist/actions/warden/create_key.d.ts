import { WardenAction } from "./warden_action";
import { Account } from "viem";
import { z } from "zod";
/**
 * Input schema for create key action.
 */
export declare const CreateKeyInput: z.ZodObject<{
    spaceId: z.ZodNumber;
    keychainId: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    spaceId: number;
    keychainId: number;
}, {
    spaceId: number;
    keychainId: number;
}>;
/**
 * Creates a new key for a given space.
 *
 * @param account - The account to create the key for.
 * @param args - The input arguments for the action.
 * @returns A message containing the created key information.
 */
export declare function createKey(account: Account, args: z.infer<typeof CreateKeyInput>): Promise<string>;
/**
 * Create key action.
 */
export declare class CreateKeyAction implements WardenAction<typeof CreateKeyInput> {
    name: string;
    description: string;
    schema: z.ZodObject<{
        spaceId: z.ZodNumber;
        keychainId: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        spaceId: number;
        keychainId: number;
    }, {
        spaceId: number;
        keychainId: number;
    }>;
    function: typeof createKey;
}
