"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateOrderAction = exports.CreateOrderInput = void 0;
exports.createOrder = createOrder;
const zod_1 = require("zod");
const chains_1 = require("../../utils/chains");
const known_1 = require("../../utils/contracts/constants/known");
const wardenContract = known_1.KNOWN_CONTRACTS[chains_1.primaryChain.id]?.WARDEN;
if (!wardenContract?.address) {
    throw new Error("Warden contract address not found");
}
const CREATE_ORDER_PROMPT = `This tool should be called when a user wants to create a new order.`;
/**
 * Input schema for create order action.
 */
exports.CreateOrderInput = zod_1.z.object({});
/**
 * Creates a new order in the marketplace.
 *
 * @param account - The account creating the order.
 * @param args - The input arguments for the action.
 * @returns A message containing the order creation status.
 */
async function createOrder(account, args) {
    try {
        return `Successfully created order`;
    }
    catch (error) {
        return `Error creating order: ${error}`;
    }
}
/**
 * Create order action.
 */
class CreateOrderAction {
    constructor() {
        this.name = "create_order";
        this.description = CREATE_ORDER_PROMPT;
        this.schema = exports.CreateOrderInput;
        this.function = createOrder;
    }
}
exports.CreateOrderAction = CreateOrderAction;
