'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-e2e1ee7a.js');
const simpleI18n = require('./simple-i18n-6f83aa86.js');
const index$1 = require('./index-bf160fda.js');

const AdvantagesListItem = ({ Icon, text }) => (index.h("div", { class: 'flexContainer', style: { padding: '6', flexDirection: 'row' } },
    index.h("div", { class: 'flexItem1' },
        index.h(Icon, null)),
    index.h("div", { class: 'flexItem11' },
        index.h("span", { style: { lineHeight: '2', color: 'black' } }, text))));

const LockIcon = () => (index.h("svg", { width: "20", height: "18", viewBox: "0 0 20 18", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
    index.h("path", { d: "M20.0002 7.9702V10.0302C20.0002 10.5802 19.5602 11.0302 19.0002 11.0502H17.0402C15.9602 11.0502 14.9702 10.2602 14.8802 9.1802C14.8202 8.5502 15.0602 7.9602 15.4802 7.5502C15.8502 7.1702 16.3602 6.9502 16.9202 6.9502H19.0002C19.5602 6.9702 20.0002 7.4202 20.0002 7.9702Z", fill: "#037DD6" }),
    index.h("path", { d: "M18.47 12.55H17.04C15.14 12.55 13.54 11.12 13.38 9.3C13.29 8.26 13.67 7.22 14.43 6.48C15.07 5.82 15.96 5.45 16.92 5.45H18.47C18.76 5.45 19 5.21 18.97 4.92C18.75 2.49 17.14 0.83 14.75 0.55C14.51 0.51 14.26 0.5 14 0.5H5C4.72 0.5 4.45 0.52 4.19 0.56C1.64 0.88 0 2.78 0 5.5V12.5C0 15.26 2.24 17.5 5 17.5H14C16.8 17.5 18.73 15.75 18.97 13.08C19 12.79 18.76 12.55 18.47 12.55ZM11 6.75H5C4.59 6.75 4.25 6.41 4.25 6C4.25 5.59 4.59 5.25 5 5.25H11C11.41 5.25 11.75 5.59 11.75 6C11.75 6.41 11.41 6.75 11 6.75Z", fill: "#037DD6" })));

const HeartIcon = () => (index.h("svg", { width: "20", height: "18", viewBox: "0 0 20 18", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
    index.h("path", { d: "M14.44 0.0999756C12.63 0.0999756 11.01 0.979976 10 2.32998C8.99 0.979976 7.37 0.0999756 5.56 0.0999756C2.49 0.0999756 0 2.59998 0 5.68998C0 6.87998 0.19 7.97998 0.52 8.99998C2.1 14 6.97 16.99 9.38 17.81C9.72 17.93 10.28 17.93 10.62 17.81C13.03 16.99 17.9 14 19.48 8.99998C19.81 7.97998 20 6.87998 20 5.68998C20 2.59998 17.51 0.0999756 14.44 0.0999756Z", fill: "#037DD6" })));

const WalletIcon = () => (index.h("svg", { width: "20", height: "20", viewBox: "0 0 20 20", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
    index.h("path", { d: "M16.28 7.53V6.28C16.28 3.58 15.63 0 10 0C4.37 0 3.72 3.58 3.72 6.28V7.53C0.92 7.88 0 9.3 0 12.79V14.65C0 18.75 1.25 20 5.35 20H14.65C18.75 20 20 18.75 20 14.65V12.79C20 9.3 19.08 7.88 16.28 7.53ZM10 16.74C8.33 16.74 6.98 15.38 6.98 13.72C6.98 12.05 8.34 10.7 10 10.7C11.66 10.7 13.02 12.06 13.02 13.72C13.02 15.39 11.67 16.74 10 16.74ZM5.35 7.44C5.27 7.44 5.2 7.44 5.12 7.44V6.28C5.12 3.35 5.95 1.4 10 1.4C14.05 1.4 14.88 3.35 14.88 6.28V7.45C14.8 7.45 14.73 7.45 14.65 7.45H5.35V7.44Z", fill: "#037DD6" })));

const InstallIcon = () => (index.h("svg", { width: "20", height: "20", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
    index.h("path", { d: "M16.4405 8.8999C20.0405 9.2099 21.5105 11.0599 21.5105 15.1099V15.2399C21.5105 19.7099 19.7205 21.4999 15.2505 21.4999H8.74047C4.27047 21.4999 2.48047 19.7099 2.48047 15.2399V15.1099C2.48047 11.0899 3.93047 9.2399 7.47047 8.9099", stroke: "white", "stroke-width": "1.5", "stroke-linecap": "round", "stroke-linejoin": "round" }),
    index.h("path", { d: "M12 2V14.88", stroke: "white", "stroke-width": "1.5", "stroke-linecap": "round", "stroke-linejoin": "round" }),
    index.h("path", { d: "M15.3504 12.6499L12.0004 15.9999L8.65039 12.6499", stroke: "white", "stroke-width": "1.5", "stroke-linecap": "round", "stroke-linejoin": "round" })));

var TrackingEvents;
(function (TrackingEvents) {
    TrackingEvents["SDK_MODAL_VIEWED"] = "sdk_modal_viewed";
    TrackingEvents["SDK_MODAL_BUTTON_CLICKED"] = "sdk_modal_button_clicked";
    TrackingEvents["SDK_MODAL_TOGGLE_CHANGED"] = "sdk_modal_toggle_changed";
})(TrackingEvents || (TrackingEvents = {}));

const styleCss = ".flexContainer {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: row;\n}\n\n.flexItem {\n    flex: 1;\n    justify-content: center;\n    align-items: center;\n}\n\n.flexItem11 {\n    flex: 11;\n    justify-content: center;\n    align-items: center;\n}\n\n.flexItem1 {\n    flex: 1;\n    justify-content: center;\n    align-items: center;\n}\n\n.tab {\n    padding: 8px;\n    cursor: pointer;\n    background-color: #F2F4F6;\n    font-size: 12px;\n    text-align: center;\n    color: #24292E;\n}\n\n.tabcontainer {\n    padding: 4px;\n    background-color: #F2F4F6;\n    border-radius: 8px;\n    margin-bottom: 30px;\n    margin-top: 30px;\n}\n\n.tabactive {\n    background-color: white;\n    -webkit-transition: background-color 300ms linear;\n    -ms-transition: background-color 300ms linear;\n    transition: background-color 300ms linear;\n    border-radius: 8px;\n}\n\n.item {\n    font-size: 12px;\n    margin-bottom: 16px;\n    border-radius: 8px;\n    padding: 10px;\n    border: 2px #F2F4F6 solid;\n    color: #24292E;\n}\n\n.extensionLabel {\n    font-style: normal;\n    font-weight: bold;\n    font-size: 14px;\n    text-align: cetner;\n    color: #24272A;\n}\n\n.notice {\n    font-size: 12px;\n    margin-left: 10px;\n    margin-right: 10px;\n    color: grey;\n}\n\n.button {\n    margin-top: 41.5px;\n    margin-bottom: 20px;\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    padding: 12px 20px;\n    background: #037DD6;\n    border-radius: 32px;\n    color: white;\n    border: 0;\n    font-size: 14px;\n    cursor: pointer;\n}\n\n.backdrop {\n    visibility: visible;\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    z-index: 99998;\n    background: rgba(0, 0, 0, 0.87);\n    opacity: 0.3;\n}\n\n.modal {\n    visibility: visible;\n    position: fixed;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 99999;\n    background: white;\n    padding: 20px;\n    border-radius: 8px;\n    top: 50%;\n    max-width: 100%;\n    width: 460px;\n    min-width: 300px;\n    box-shadow: rgba(0, 0, 0, 0.2) 0px 11px 15px -7px, rgba(0, 0, 0, 0.14) 0px 24px 38px 3px, rgba(0, 0, 0, 0.12) 0px 9px 46px 8px;\n    -webkit-font-smoothing: antialiased;\n}\n\n.closeButton {\n    color: #BBC0C5;\n    cursor: pointer;\n}\n\n.logoContainer {\n    margin-left: 24px;\n    margin-right: 24px;\n    margin-top: 24px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.connectMobileText {\n    font-size: 14px;\n    color: black;\n    margin-top: 28px;\n    margin-bottom: 28px;\n    line-height: 2;\n}\n\n.blue {\n    color: #037DD6;\n    font-weight: 700;\n}\n\n.installExtensionText {\n    margin-left: 10px;\n}\n\n.center {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.right {\n    display: flex;\n    align-items: center;\n    justify-content: right;\n}\n\n#sdk-mm-qrcode {\n    svg {\n        width: 50%;\n    }\n}";
const MmInstallModalStyle0 = styleCss;

const InstallModal = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
        this.close = index.createEvent(this, "close", 7);
        this.startDesktopOnboarding = index.createEvent(this, "startDesktopOnboarding", 7);
        this.trackAnalytics = index.createEvent(this, "trackAnalytics", 7);
        this.link = undefined;
        this.sdkVersion = undefined;
        this.preferDesktop = undefined;
        this.tab = 1;
        this.isDefaultTab = true;
        this.translationsLoaded = false;
        this.onClose = this.onClose.bind(this);
        this.onStartDesktopOnboardingHandler = this.onStartDesktopOnboardingHandler.bind(this);
        this.setTab = this.setTab.bind(this);
        this.render = this.render.bind(this);
        this.setTab(this.preferDesktop ? 1 : 2);
        this.i18nInstance = new simpleI18n.SimpleI18n();
    }
    componentDidLoad() {
        this.trackAnalytics.emit({
            event: TrackingEvents.SDK_MODAL_VIEWED,
            params: {
                extensionInstalled: false,
                tab: this.tab === 1 ? 'desktop' : 'mobile',
            },
        });
    }
    async connectedCallback() {
        await this.i18nInstance.init({
            fallbackLng: 'en'
        });
        this.translationsLoaded = true;
    }
    updatePreferDesktop(newValue) {
        if (newValue) {
            this.setTab(1);
        }
        else {
            this.setTab(2);
        }
    }
    onClose() {
        this.close.emit();
    }
    onStartDesktopOnboardingHandler() {
        this.trackAnalytics.emit({
            event: TrackingEvents.SDK_MODAL_BUTTON_CLICKED,
            params: {
                button_type: 'install_extension',
                tab: 'desktop',
            },
        });
        this.startDesktopOnboarding.emit();
    }
    setTab(newTab, isUserAction = false) {
        if (isUserAction) {
            this.trackAnalytics.emit({
                event: TrackingEvents.SDK_MODAL_TOGGLE_CHANGED,
                params: {
                    toggle: this.tab === 1 ? 'desktop_to_mobile' : 'mobile_to_desktop',
                },
            });
        }
        this.tab = newTab;
        this.isDefaultTab = false;
    }
    render() {
        if (!this.translationsLoaded) {
            return null; // or a loading state
        }
        const t = (key) => this.i18nInstance.t(key);
        const currentTab = this.isDefaultTab ? this.preferDesktop ? 1 : 2 : this.tab;
        const svgElement = index$1.encodeQR(this.link, "svg", {
            ecc: "medium",
            scale: 2
        });
        return (index.h(simpleI18n.WidgetWrapper, { className: "install-model" }, index.h("div", { class: 'backdrop', onClick: () => this.onClose() }), index.h("div", { class: 'modal' }, index.h("div", { class: 'closeButtonContainer' }, index.h("div", { class: 'right' }, index.h("span", { class: 'closeButton', onClick: () => this.onClose() }, index.h(simpleI18n.CloseButton, null)))), index.h("div", { class: 'logoContainer' }, index.h(simpleI18n.Logo, null)), index.h("div", null, index.h("div", { class: 'tabcontainer' }, index.h("div", { class: 'flexContainer' }, index.h("div", { onClick: () => this.setTab(1, true), class: `tab flexItem ${currentTab === 1 ? 'tabactive' : ''}` }, t('DESKTOP')), index.h("div", { onClick: () => this.setTab(2, true), class: `tab flexItem ${currentTab === 2 ? 'tabactive' : ''}` }, t('MOBILE')))), index.h("div", { style: { display: currentTab === 1 ? 'none' : 'block' } }, index.h("div", { class: 'flexContainer' }, index.h("div", { class: 'flexItem', style: {
                textAlign: 'center',
                marginTop: '4',
            } }, svgElement && (index.h("div", { id: "sdk-mm-qrcode", class: 'center', innerHTML: svgElement })), index.h("div", { class: 'connectMobileText' }, t('SCAN_TO_CONNECT'), " ", index.h("br", null), index.h("span", { class: 'blue' }, index.h("b", null, t('META_MASK_MOBILE_APP'))))))), index.h("div", { style: { display: currentTab === 2 ? 'none' : 'block' } }, index.h("div", { class: 'item' }, index.h(AdvantagesListItem, { Icon: HeartIcon, text: t('INSTALL_MODAL.TRUSTED_BY_USERS') })), index.h("div", { class: 'item' }, index.h(AdvantagesListItem, { Icon: LockIcon, text: t('INSTALL_MODAL.LEADING_CRYPTO_WALLET') })), index.h("div", { class: 'item' }, index.h(AdvantagesListItem, { Icon: WalletIcon, text: t('INSTALL_MODAL.CONTROL_DIGITAL_INTERACTIONS') })), index.h("button", { class: 'button', onClick: () => this.onStartDesktopOnboardingHandler() }, index.h(InstallIcon, null), index.h("span", { class: 'installExtensionText' }, t('INSTALL_MODAL.INSTALL_META_MASK_EXTENSION'))))), index.h(simpleI18n.SDKVersion, { version: this.sdkVersion }))));
    }
    get el() { return index.getElement(this); }
    static get watchers() { return {
        "preferDesktop": ["updatePreferDesktop"]
    }; }
};
InstallModal.style = MmInstallModalStyle0;

exports.mm_install_modal = InstallModal;

//# sourceMappingURL=mm-install-modal.cjs.entry.js.map